#lang racket

(define buchstabiertafel (list (cons 'A 'Alpha)
                               (cons 'B 'Bravo)
                               (cons 'C 'Charlie)
                               (cons 'D 'Delta)
                               (cons 'E 'Echo)
                               (cons 'F 'Foxtrot)
                               (cons 'G 'Golf)
                               (cons 'H 'Hotel)
                               (cons 'I 'India)
                               (cons 'J 'Juliet)
                               (cons 'K 'Kilo)
                               (cons 'L 'Lima)
                               (cons 'M 'Mike)
                               (cons 'N 'November)
                               (cons 'O 'Oscar)
                               (cons 'P 'Papa)
                               (cons 'Q 'Quebec)
                               (cons 'R 'Romeo)
                               (cons 'S 'Sierra)
                               (cons 'T 'Tango)
                               (cons 'U 'Uniform)
                               (cons 'V 'Viktor)
                               (cons 'W 'Whiskey)
                               (cons 'X 'X-ray)
                               (cons 'Y 'Yankee)
                               (cons 'Z 'Zulu)
                               (cons  0 'Nadazero)
                               (cons  1 'Unaone)
                               (cons  2 'Duotwo)
                               (cons  3 'Terrathree)
                               (cons  4 'Carrefour)
                               (cons  5 'Pentafive)
                               (cons  6 'Soxisix)
                               (cons  7 'Setteseven)
                               (cons  8 'Oktoeight)
                               (cons  9 'Novonine)
                               (cons  "," 'Decimal)
                               (cons  "." 'Stop)))

(define (getKey input)
  (cdr (assoc input buchstabiertafel)))

(getKey 'B)

;TODO
(define (rekKeys input)
  (let ([Symbollist (string->list input)])
        (if (< 0 (length Symbollist)
            (and (getKey (car Symbollist))(remove 1 Symbollist)(rekKeys Symbollist))
         (getKey input))))
            